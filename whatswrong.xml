<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="whatswrong" default="all">
  
  
  <property file="whatswrong.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
    <exclude name="**/.sbas/**"/>
    <exclude name="**/.IJI.*/**"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
  </patternset>
  
  
  <!-- Application Server Libraries -->
  
  <!-- Modules -->
  
  
  <!-- Module javautils -->
  
  <dirname property="module.javautils.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.javautils" value="${compiler.args}"/>
  
  <property name="javautils.output.dir" value="${module.javautils.basedir}/classes/production"/>
  <property name="javautils.testoutput.dir" value="${module.javautils.basedir}/classes/test"/>
  
  <path id="javautils.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="javautils.module.classpath"/>
  
  
  <patternset id="excluded.from.module.javautils">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.javautils">
    <patternset refid="excluded.from.module.javautils"/>
  </patternset>
  
  <path id="javautils.module.sourcepath">
    <dirset dir="${module.javautils.basedir}/../javautils">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.javautils" depends="compile.module.javautils.production,compile.module.javautils.tests" description="Compile module javautils"/>
  
  <target name="compile.module.javautils.production" description="Compile module javautils; production classes">
    <mkdir dir="${javautils.output.dir}"/>
    <javac destdir="${javautils.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.javautils}"/>
      <bootclasspath refid="javautils.module.bootclasspath"/>
      <classpath refid="javautils.module.classpath"/>
      <src refid="javautils.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.javautils"/>
    </javac>
    
    <copy todir="${javautils.output.dir}">
      <fileset dir="${module.javautils.basedir}/../javautils/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.javautils.tests" depends="compile.module.javautils.production" description="compile module javautils; test classes" unless="skip.tests"/>
  
  <target name="clean.module.javautils" description="cleanup module">
    <delete dir="${javautils.output.dir}"/>
    <delete dir="${javautils.testoutput.dir}"/>
  </target>
  
  
  <!-- Module whatswrong -->
  
  <dirname property="module.whatswrong.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.whatswrong" value="${compiler.args}"/>
  
  <property name="whatswrong.output.dir" value="${module.whatswrong.basedir}/classes/production"/>
  <property name="whatswrong.testoutput.dir" value="${module.whatswrong.basedir}/classes/test"/>
  
  <path id="whatswrong.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="whatswrong.module.classpath">
    <pathelement location="${module.whatswrong.basedir}/lib/lucene-core-2.3.1.jar"/>
    <pathelement location="${module.whatswrong.basedir}/lib/lucene-highlighter-2.3.1.jar"/>
    <pathelement location="${module.whatswrong.basedir}/lib/epsgraphics-1.1.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.whatswrong">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.whatswrong">
    <patternset refid="excluded.from.module.whatswrong"/>
  </patternset>
  
  <path id="whatswrong.module.sourcepath">
    <dirset dir="${module.whatswrong.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.whatswrong" depends="compile.module.whatswrong.production,compile.module.whatswrong.tests" description="Compile module whatswrong"/>
  
  <target name="compile.module.whatswrong.production" depends="compile.module.javautils" description="Compile module whatswrong; production classes">
    <mkdir dir="${whatswrong.output.dir}"/>
    <javac destdir="${whatswrong.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.whatswrong}"/>
      <bootclasspath refid="whatswrong.module.bootclasspath"/>
      <classpath refid="whatswrong.module.classpath"/>
      <src refid="whatswrong.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.whatswrong"/>
    </javac>
    
    <copy todir="${whatswrong.output.dir}">
      <fileset dir="${module.whatswrong.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.whatswrong.tests" depends="compile.module.whatswrong.production" description="compile module whatswrong; test classes" unless="skip.tests"/>
  
  <target name="clean.module.whatswrong" description="cleanup module">
    <delete dir="${whatswrong.output.dir}"/>
    <delete dir="${whatswrong.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.javautils, clean.module.whatswrong" description="cleanup all"/>
  
  <target name="all" depends="init, clean, compile.module.javautils, compile.module.whatswrong" description="build all"/>
</project>